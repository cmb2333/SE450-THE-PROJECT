@import todo_manager
@import random

<@
def random_string():
    """Generate a random string."""
    length = random.randint(5, 20)
    return ''.join(random.choices("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", k=length))

def random_date():
    """Generate a random valid date."""
    year = random.randint(2023, 2030)
    month = random.randint(1, 12)
    day = random.randint(1, 28)
    return f"{year:04d}-{month:02d}-{day:02d}"
@>

# Pools
pool: manager 1 SINGLE

# Properties
property: len(manager.list_tasks()) >= 0

# Initialize TodoManager
manager := todo_manager.TodoManager()

# Add an initial task to prevent deadlock
~manager.add_task("Initial Task", "2024-12-31", "Medium", "Initial Category", None)

# Actions
len(manager.list_tasks()) > 0 -> ~manager.list_tasks()

len(manager.list_tasks()) > 0 -> ~manager.mark_all_completed()

len(manager.list_tasks()) > 0 -> ~manager.archive_completed_tasks()

len(manager.list_tasks()) > 0 -> ~manager.search_tasks(random_string())

# Fallback to reset state
manager := todo_manager.TodoManager()
