@import todo_manager
@import random

# Helper functions for generating random inputs
<@
def random_string():
    """Generate a random string."""
    length = random.randint(5, 20)
    return ''.join(random.choices("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", k=length))

def random_date():
    """Generate a random valid date."""
    year = random.randint(2023, 2030)
    month = random.randint(1, 12)
    day = random.randint(1, 28)
    return f"{year:04d}-{month:02d}-{day:02d}"
@>

# Pools for managing the state
pool: <manager> 1 SINGLE
pool: <string> 20
pool: <integer> 10
pool: <task_list> 10

# Properties to check invariants
property: len(<manager>.list_tasks()) >= 0

# Logging actions
log: 1 <manager>.list_tasks()
log: POST 1 <manager>.list_tasks()

# Initialize a TodoManager
<manager> := todo_manager.TodoManager()

# Listing tasks
~<manager>.list_tasks()

# Marking all tasks as completed
~<manager>.mark_all_completed() => \
    all(task.completed for task in <manager>.list_tasks())

# Searching tasks
~<manager>.search_tasks(random_string())

# Undo last action
~<manager>.undo_last_action()

# Archive completed tasks
~<manager>.archive_completed_tasks() => \
    len(<manager>.list_tasks()) <= pre<(len(<manager>.list_tasks()))>
