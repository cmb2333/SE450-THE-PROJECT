@import todo_manager
@import random

# Define helper functions for test actions
<@
def random_string():
    """Generate a random string."""
    length = random.randint(5, 20)
    return ''.join(random.choices("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", k=length))

@>

# Pools for managing states during testing
pool: <todo_manager.TodoManager> 1 SINGLE

# Properties to check invariants
property: len(<todo_manager.TodoManager>.list_tasks()) >= 0

# Logging actions
log: 1 <todo_manager.TodoManager>.list_tasks()
log: POST 1 <todo_manager.TodoManager>.list_tasks()

# Actions
# Initialize a TodoManager
<todo_manager.TodoManager> := todo_manager.TodoManager()

# List tasks
action list_tasks:
    tasks = ~<todo_manager.TodoManager>.list_tasks()

# Mark all tasks as completed
action mark_all_completed:
    ~<todo_manager.TodoManager>.mark_all_completed() => \
        all(task.completed for task in <todo_manager.TodoManager>.list_tasks())

# Undo last action
action undo_last_action:
    ~<todo_manager.TodoManager>.undo_last_action()

# Archive completed tasks
action archive_completed_tasks:
    ~<todo_manager.TodoManager>.archive_completed_tasks() => \
        len(<todo_manager.TodoManager>.list_tasks()) <= pre<(len(<todo_manager.TodoManager>.list_tasks()))>
